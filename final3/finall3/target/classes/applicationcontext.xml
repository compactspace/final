<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	<context:component-scan
		base-package="com.spring" />

	<context:property-placeholder
		location="classpath:mappings/database.properties" />




	<!-- <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy> -->
	<!-- <bean id="aop" class="com.spring.finall.aop.Ex01Aspect"/> -->

	<!-- <aop:config proxy-target-class="true"> <aop:pointcut id="servicePublicMethod" 
		expression="execution(public * com.spring.finall.redis.controller..*())" 
		/> <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="test" rollback-for="Exception" /> </tx:attributes> 
		</tx:advice> -->


	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"
		p:host-name="127.0.0.1" p:port="6379" p:password="1111" />

	<bean id="redisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate"
		p:connectionFactory-ref="redisConnectionFactory" />





<!--  dbcp 풀이이 적혀있다. 즉 드라이버 로드 및 컨넥션을 미리 만들어주는 bean -->
<!--  <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="1000"/>	
			<property name="minIdle" value="0"/>				
		<property name="maxIdle" value="1"/>
		<property name="maxActive" value="1000"/> 
	</bean>  -->
	
	
<!-- 	 <bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="1000"/>	
			<property name="minIdle" value="0"/>				
		<property name="maxIdle" value="1"/>
		<property name="maxActive" value="1000"/> 
	</bean> 
	 -->
	
	
	
<!--  참조값 ref 는 위 datasourcr이다. 즉 저걸 바탕으로 각종 구현된 select 등을 제공 하는듯 그러나 우리는 
좀더 세련된 객체를 쓰려고 이제 필요 없으니 주석처리한다.
 -->
<!-- 	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	
	<!-- classpath:sql-map-config.xml 객체화하기 
	우리가 각종 적은 쿼리문을 객체화해주고, 밑에 sqlSessionTamplate
	의 참조대상으로 변수등을 받게 된다.
	-->
	<bean id="sqlsession"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
	</bean>

	<!-- 생성된 bean=객체 sqlsession 을 가지고 SqlSessionTemplate 형 객체를 생성한다.-->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlsession"></constructor-arg>
	</bean>	

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>




</beans>
